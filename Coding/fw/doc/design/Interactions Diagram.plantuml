@startuml

Title Interaction Diagram

Mainloop --> Lawicel : executeCycle()
Lawicel --> m_selectedCAN : getChannelState()
m_selectedCAN --> Lawicel : return channelState
Lawicel --> Lawicel : check if channelState == "CLOSED"
Lawicel --> Lawicel : Define "frame" as a new empty Frame
Lawicel --> m_selectedCAN : pollSingle(&frame)


m_selectedCAN --> m_selectedCAN  : parsePacket()

group Asynchronous
    m_selectedSerial <-- Client : Send Lawicel Command
    m_selectedSerial --> m_selectedSerial : Save Lawicel \nCommand in \nByte-Queue
end

m_selectedCAN --> Lawicel : return success

Lawicel --> Lawicel : Parse Lawicel String from Frame
Lawicel --> Lawicel : Append Timestamp and Terminator
Lawicel --> m_selectedSerial : Send Message
m_selectedSerial --> Client : Send Websocket Message


Lawicel --> m_selectedSerial : Check for incoming Lawicel Command
m_selectedSerial --> Lawicel : return Lawicel Command

Lawicel --> Lawicel : Process Lawicel Command



@enduml